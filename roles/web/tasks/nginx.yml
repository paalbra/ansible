---

- name: "Install nginx"
  ansible.builtin.dnf:
    name: "nginx"
    state: "present"
  become: true

- name: "Install php"
  ansible.builtin.dnf:
    name: "php"
    state: "present"
  become: true

- name: "Start and enable nginx"
  ansible.builtin.systemd_service:
    name: "nginx"
    state: "started"
    enabled: true
  become: true

- name: "Start and enable php-fpm"
  ansible.builtin.systemd_service:
    name: "php-fpm"
    state: "started"
    enabled: true
  become: true

- name: "Set SELinux httpd_can_network_connect"
  ansible.builtin.seboolean:
    name: "httpd_can_network_connect"
    state: true
    persistent: true
  become: true

- name: "Copy nginx config"
  ansible.builtin.copy:
    src: "nginx.conf"
    dest: "/etc/nginx/nginx.conf"
  become: true
  notify:
    - "nginx_reload"

- name: "Copy default server nginx config"
  ansible.builtin.copy:
    src: "default_server.conf"
    dest: "/etc/nginx/conf.d/default_server.conf"
  become: true
  notify:
    - "nginx_reload"

- name: "Copy global nginx config"
  ansible.builtin.copy:
    src: "global.conf"
    dest: "/etc/nginx/default.d/global.conf"
  become: true
  notify:
    - "nginx_reload"

- name: "Copy acme-challenge nginx config"
  ansible.builtin.copy:
    src: "acme-challenge.conf"
    dest: "/etc/nginx/default.d/acme-challenge.conf"
  become: true
  notify:
    - "nginx_reload"

- name: "Create acme-challenge directory"
  ansible.builtin.file:
    path: "/var/www/global/acme-challenge/.well-known/acme-challenge"
    state: "directory"
  become: true

- name: "Create web server directories"
  ansible.builtin.file:
    path: "/var/www/{{ item.name }}/www"
    state: "directory"
  loop: "{{ web_servers }}"
  loop_control:
    label: "{{ item.name }}"
  become: true

- name: "Configure nginx server config"
  ansible.builtin.template:
    src: "server.j2.conf"
    dest: "/etc/nginx/conf.d/{{ item.name }}.conf"
  loop: "{{ web_servers }}"
  loop_control:
    label: "{{ item.name }}"
  become: true
  notify:
    - "nginx_reload"
